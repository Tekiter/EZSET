{"version":3,"sources":["webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/components/VTextField/VTextField.ts"],"names":["mixins","name","functional","props","value","type","Number","default","max","String","render","parseInt","content","isGreater","h","staticClass","class","ctx","window","mounted","this","handler","onObserve","destroyed","methods","i","length","options","callback","console","baseMixins","onVisible","dirtyTypes","directives","ripple","inheritAttrs","appendOuterIcon","autofocus","clearable","clearIcon","counter","Boolean","counterValue","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","data","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","VInput","computedColor","color","computedCounterValue","internalValue","get","set","isDirty","lazyValue","toString","isEnclosed","isLabelActive","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","hasLabel","isFocused","watch","created","$attrs","hasOwnProperty","requestAnimationFrame","focus","blur","clearableCallback","$refs","input","genAppendSlot","slot","$slots","genIcon","genSlot","genPrependInnerSlot","genIconSlot","genInputSlot","prepend","genClearIcon","undefined","attrs","disabled","genCounter","attrs$","$createElement","dark","light","genDefaultSlot","genFieldset","genLabel","absolute","focused","for","VLabel","genLegend","width","span","domProps","innerHTML","style","genInput","listeners","Object","id","readonly","on","keydown","onKeyDown","ref","genMessages","hideDetails","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","e","$nextTick","onClick","onFocus","document","$emit","onInput","target","onMouseDown","onMouseUp","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","updateValue"],"mappings":"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","file":"js/chunk-dc2ab316.e4802927.js","sourcesContent":["// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({ name: 'intersectable' })\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n        },\n      })\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'setLabelWidth',\n      'setPrefixWidth',\n      'setPrependWidth',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: { ripple },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return (this.internalValue || '').toString().length\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return (this.lazyValue != null &&\n        this.lazyValue.toString().length > 0) ||\n        this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && (!this.isSingle || (!this.isLabelActive && !this.placeholder))\n    },\n    labelValue (): boolean {\n      return !this.isSingle &&\n        Boolean(this.isFocused || this.isLabelActive || this.placeholder)\n    },\n  },\n\n  watch: {\n    labelValue: 'setLabelWidth',\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    this.autofocus && this.tryAutofocus()\n    this.setLabelWidth()\n    this.setPrefixWidth()\n    this.setPrependWidth()\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append'] as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const data = this.isDirty ? undefined : { attrs: { disabled: true } }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback, data),\n      ])\n    },\n    genCounter () {\n      if (this.counter === false || this.counter == null) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max,\n          value: this.computedCounterValue,\n        },\n      })\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners['change'] // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.lazyValue,\n        },\n        attrs: {\n          ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          id: this.computedId,\n          placeholder: this.placeholder,\n          readonly: this.readonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n      })\n    },\n    genMessages () {\n      if (this.hideDetails === true) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      if (this.hideDetails === 'auto' && !messagesNode && !counterNode) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.disabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue)\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined || !this.$refs.label) return\n\n      this.labelWidth = Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input ||\n        document.activeElement === this.$refs.input\n      ) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n  },\n})\n"],"sourceRoot":""}