{"version":3,"sources":["../../src/utils/initialization.js"],"names":["initialization","createSuperAdmin","exists","User","findOne","where","equals","console","log","remove","admin","username","password","info","realname","roles","result","save","initialize","isFirstStart","role","loadRoles","module","exports","default"],"mappings":";;AAAA;;AACA;;;;AACA;;;;;;AAEA,MAAMA,iBAAiB;AACnB,UAAMC,gBAAN,GAAyB;AACrB,cAAMC,SAASC,eAAKC,OAAL,GACVC,KADU,CACJ,UADI,EAEVC,MAFU,CAEH,OAFG,CAAf;AAGA,YAAIJ,MAAJ,EAAY;AACRK,oBAAQC,GAAR,CAAY,oCAAZ,EADQ,CAC0C;AAClD,kBAAMN,OAAOO,MAAP,EAAN;AACH;;AAED,cAAMC,QAAQ,IAAIP,cAAJ,CAAS;AACnBQ,sBAAU,OADS;AAEnBC,sBAAU,OAFS;AAGnBC,kBAAM;AACFC,0BAAU;AADR,aAHa;AAMnBC,mBAAO,CAAC,OAAD;AANY,SAAT,CAAd;AAQA,cAAMC,SAAS,MAAMN,MAAMO,IAAN,EAArB;AACA,cAAM,uBAAU,YAAV,EAAwBD,OAAOL,QAA/B,CAAN;;AAEAJ,gBAAQC,GAAR,CAAa,kCAAb,EApBqB,CAoB2B;AACnD,KAtBkB;AAuBnB,UAAMU,UAAN,GAAmB;AACf,cAAMC,eAAe,EAAE,MAAM,8BAAR,CAArB;AACA,YAAIA,YAAJ,EAAkB;AACdZ,oBAAQC,GAAR,CAAY,0BAAZ,EADc,CAC0B;AACxC,kBAAMR,eAAeC,gBAAf,EAAN;;AAEA,kBAAM,gCAAN;AACH;;AAED,cAAMmB,eAAKC,SAAL,EAAN;AACH;AAjCkB,CAAvB;;AAoCAC,OAAOC,OAAP,CAAeC,OAAf,GAAyBxB,cAAzB;AACAsB,OAAOC,OAAP,GAAiBvB,cAAjB","file":"initialization.js","sourcesContent":["import { configAvailable, setConfig, setDefaultConfigs } from '../utils/config'\nimport User from '../models/User'\nimport role from '../utils/role'\n\nconst initialization = {\n    async createSuperAdmin() {\n        const exists = User.findOne()\n            .where('username')\n            .equals('admin')\n        if (exists) {\n            console.log('Removing existing admin account...') // eslint-disable-line no-console\n            await exists.remove()\n        }\n\n        const admin = new User({\n            username: 'admin',\n            password: 'admin',\n            info: {\n                realname: '관리자',\n            },\n            roles: ['admin'],\n        })\n        const result = await admin.save()\n        await setConfig('superAdmin', result.username)\n\n        console.log(`Superadmin created (admin/admin)`) // eslint-disable-line no-console\n    },\n    async initialize() {\n        const isFirstStart = !(await configAvailable())\n        if (isFirstStart) {\n            console.log('Initialization detected.') // eslint-disable-line no-console\n            await initialization.createSuperAdmin()\n\n            await setDefaultConfigs()\n        }\n\n        await role.loadRoles()\n    },\n}\n\nmodule.exports.default = initialization\nmodule.exports = initialization\n"]}