{"version":3,"sources":["../../../src/libs/role/Role.js"],"names":["RoleSystem","constructor","params","_roles","_default","Role","tag","name","roleNames","Object","keys","map","roletag","setRole","perm","getRole","role","Query","mode","getDefault","default","hasRole","removeRole","Error","export","getPerm","undefined","createPermChecker","roles","Array","isArray","resource","param","resources","push","forEach","rname","Permission","_perm","copyPerm","result","resname","all","copyGrant","paramname","grant","any","own","module","exports"],"mappings":"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","file":"Role.js","sourcesContent":["import Permission from './Permission'\nimport Query from './Query'\n\nclass RoleSystem {\n    constructor(...params) {\n        this._roles = {}\n        this._default = new Role({ tag: 'default', name: 'default' })\n    }\n\n    roleNames() {\n        return Object.keys(this._roles).map(roletag => {\n            return { tag: roletag, name: this._roles[roletag].name }\n        })\n    }\n\n    setRole({ tag, perm, name }) {\n        if (!perm) {\n            perm = {}\n        }\n        // if (perm instanceof Role) {\n        //     this._roles[tag] = perm\n        // } else {\n        //     this._roles[tag] = new Role(perm)\n        // }\n        this._roles[tag] = new Role({ perm, name, tag })\n    }\n\n    getRole(roletag) {\n        return this._roles[roletag]\n    }\n\n    role(roletag) {\n        if (!this._roles[roletag]) {\n            this.setRole({ tag: roletag, perm: {} })\n        }\n        return new Query({ role: this._roles[roletag], mode: 'grant' })\n    }\n\n    getDefault() {\n        return this._default\n    }\n\n    // setDefault(defaultRole) {\n    //     this._default = defaultRole\n    // }\n\n    default() {\n        return new Query({ role: this._default })\n    }\n\n    hasRole(roletag) {\n        return !!this._roles[roletag]\n    }\n\n    removeRole(roletag) {\n        if (!this._roles[roletag]) {\n            throw new Error('Invalid role tag')\n        }\n\n        delete this._roles[roletag]\n    }\n\n    export(roletag) {\n        if (this._roles[roletag]) {\n            return {\n                tag: roletag,\n                // perm: copyPerm(this._roles[roletag]._perm),\n                name: this._roles[roletag].name,\n                perm: this._roles[roletag].getPerm(),\n            }\n        } else {\n            return undefined\n        }\n    }\n\n    createPermChecker(roles) {\n        if (!Array.isArray(roles)) {\n            roles = [roles]\n        }\n\n        // roles = [this.getDefault(), ...roles]\n\n        return (resource, param) => {\n            let resources = []\n\n            if (this.getDefault().resource(resource)) {\n                resources.push(this.getDefault().resource(resource))\n            }\n\n            roles.forEach(rname => {\n                if (\n                    this._roles[rname] &&\n                    this._roles[rname].resource(resource)\n                ) {\n                    resources.push(this._roles[rname].resource(resource))\n                }\n            })\n\n            return new Permission(resources, param)\n        }\n    }\n}\n\nclass Role {\n    constructor({ perm, name, tag }) {\n        if (perm) {\n            this._perm = copyPerm(perm)\n        } else {\n            this._perm = {}\n        }\n        this.name = name || 'unnamed role'\n        this.tag = tag\n    }\n\n    resource(name) {\n        if (!this._perm[name]) {\n            this._perm[name] = {}\n        }\n        return this._perm[name]\n    }\n\n    createPermChecker() {\n        return (resource, param) => {\n            return new Permission(this._perm[resource], param)\n        }\n    }\n\n    getPerm() {\n        let result = {}\n\n        result = copyPerm(this._perm)\n\n        return result\n    }\n}\n\nfunction copyPerm(perm) {\n    let result = {}\n    Object.keys(perm).forEach(resname => {\n        let resource = {}\n\n        if (perm[resname].all) {\n            resource.all = copyGrant(perm[resname].all)\n        }\n        if (perm[resname].params) {\n            resource.params = {}\n            Object.keys(perm[resname].params).forEach(paramname => {\n                resource.params[paramname] = copyGrant(\n                    perm[resname].params[paramname]\n                )\n            })\n        }\n\n        result[resname] = resource\n    })\n    return result\n}\n\nfunction copyGrant(grant) {\n    if (Array.isArray(grant)) {\n        return [...grant]\n    } else {\n        const result = {}\n\n        if (grant.any) {\n            result.any = [...grant.any]\n        }\n        if (grant.own) {\n            result.own = [...grant.own]\n        }\n\n        return result\n    }\n}\n\nmodule.exports = {\n    RoleSystem,\n    Role,\n}\n"]}