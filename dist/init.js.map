{"version":3,"sources":["../src/init.js"],"names":["initApp","PORT","DATABASE_URI","SOCKET_PORT","err","Error","database","initialize","console","log","initialization","app","listen","error"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAJA;kBAMe,eAAeA,OAAf,CAAuB,EAAEC,IAAF,EAAQC,YAAR,EAAsBC,WAAtB,EAAvB,EAA4D;AACvE,QAAI;AACA,YAAI,CAACD,YAAL,EAAmB;AACf,kBAAME,MAAM,IAAIC,KAAJ,CACR,uDADQ,CAAZ;AAGA,kBAAMD,GAAN;AACH;AACD,cAAME,mBAASC,UAAT,CAAoBL,YAApB,CAAN;AACAM,gBAAQC,GAAR,CAAY,oCAAZ;;AAEA,cAAMC,yBAAeH,UAAf,EAAN;AACA,cAAM,wBAAWI,aAAX,EAAgBR,WAAhB,CAAN;;AAEAQ,sBAAIC,MAAJ,CAAWX,IAAX,EAAiB,MAAMO,QAAQC,GAAR,CAAa,qBAAoBR,IAAK,EAAtC,CAAvB;AACH,KAdD,CAcE,OAAOY,KAAP,EAAc;AACZL,gBAAQC,GAAR,CAAY,sBAAZ;AACAD,gBAAQK,KAAR,CAAcA,KAAd;AACH;AACJ,C","file":"init.js","sourcesContent":["/* eslint-disable no-console */\nimport database from './utils/database'\nimport app from './app'\nimport initialization from './utils/initialization'\nimport { initSocket } from './utils/socket'\n\nexport default async function initApp({ PORT, DATABASE_URI, SOCKET_PORT }) {\n    try {\n        if (!DATABASE_URI) {\n            const err = new Error(\n                'Environment Variable \"DATABASE_URL\" has not been set.'\n            )\n            throw err\n        }\n        await database.initialize(DATABASE_URI)\n        console.log('Successfully connected to database')\n\n        await initialization.initialize()\n        await initSocket(app, SOCKET_PORT)\n\n        app.listen(PORT, () => console.log(`Listening on port ${PORT}`))\n    } catch (error) {\n        console.log('Failed to initialize')\n        console.error(error)\n    }\n}\n"]}