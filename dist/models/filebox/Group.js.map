{"version":3,"sources":["../../../src/models/filebox/Group.js"],"names":["GroupSchema","mongoose","Schema","name","type","String","required","trim","isfolder","Boolean","parent","SchemaTypes","ObjectId","children","model"],"mappings":";;;;;;AAAA;;;;;;AAEA,MAAMA,cAAc,IAAIC,mBAASC,MAAb,CAAoB;AACpCC,UAAM;AACFC,cAAMC,MADJ;AAEFC,kBAAU,IAFR;AAGFC,cAAM;AAHJ,KAD8B;AAMpC;AACAC,cAAU;AACNJ,cAAMK,OADA;AAENH,kBAAU;AAFJ,KAP0B;AAWpC;AACAI,YAAQ;AACJN,cAAMH,mBAASU,WAAT,CAAqBC;AADvB,KAZ4B;AAepC;AACAC,cAAU,CAAC,EAAET,MAAMH,mBAASU,WAAT,CAAqBC,QAA7B,EAAD;AAhB0B,CAApB,CAApB;;kBAmBeX,mBAASa,KAAT,CAAe,cAAf,EAA+Bd,WAA/B,C","file":"Group.js","sourcesContent":["import mongoose from 'mongoose'\n\nconst GroupSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: true,\n        trim: true,\n    },\n    //폴더면 true 그룹이면 false\n    isfolder: {\n        type: Boolean,\n        required: true,\n    },\n    //상위 그룹의 id 저장\n    parent: {\n        type: mongoose.SchemaTypes.ObjectId,\n    },\n    //하위 그룹혹은 폴더의 id 저장\n    children: [{ type: mongoose.SchemaTypes.ObjectId }],\n})\n\nexport default mongoose.model('FileboxGroup', GroupSchema)\n"]}