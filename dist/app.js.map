{"version":3,"sources":["../src/app.js"],"names":["app","disable","use","skip","get","bodyParser","json","limit","urlencoded","extended","v1API","req","res","next","err","Error","status","express","static","path","join","__dirname","message"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,MAAMA,MAAM,wBAAZ;AACAA,IAAIC,OAAJ,CAAY,cAAZ;;AAEAD,IAAIE,GAAJ,CACI,sBAAO,KAAP,EAAc;AACVC,UAAM,MAAMH,IAAII,GAAJ,CAAQ,KAAR,MAAmB;AADrB,CAAd,CADJ;AAKAJ,IAAIE,GAAJ,CAAQG,qBAAWC,IAAX,CAAgB,EAAEC,OAAO,MAAT,EAAhB,CAAR;AACAP,IAAIE,GAAJ,CACIG,qBAAWG,UAAX,CAAsB;AAClBC,cAAU,KADQ;AAElBF,WAAO;AAFW,CAAtB,CADJ;AAMAP,IAAIE,GAAJ,CAAQ,SAAR,EAAmBQ,WAAnB;;AAEAV,IAAIE,GAAJ,CAAQ,WAAR,EAAqB,CAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACrC,UAAMC,MAAM,IAAIC,KAAJ,CAAU,oBAAV,CAAZ;AACAD,QAAIE,MAAJ,GAAa,GAAb;AACAH,SAAKC,GAAL;AACH,CAJD;;AAMAd,IAAIE,GAAJ,CAAQ,yCAAQ,EAAR,CAAR;AACAF,IAAIE,GAAJ,CAAQe,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;;AAEA;AACArB,IAAIE,GAAJ,CAAQ,CAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACxB,UAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,QAAIE,MAAJ,GAAa,GAAb;AACAH,SAAKC,GAAL;AACH,CAJD;;AAMA;AACAd,IAAIE,GAAJ,CAAQ,CAACY,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AAC7B;AACAD,QAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB,EAA8BV,IAA9B,CAAmC;AAC/BgB,iBAASR,IAAIQ;AADkB,KAAnC;AAGH,CALD;;kBAOetB,G","file":"app.js","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport logger from 'morgan'\nimport bodyParser from 'body-parser'\nimport history from 'connect-history-api-fallback'\n\nimport v1API from './api/v1'\n\nconst app = express()\napp.disable('x-powered-by')\n\napp.use(\n    logger('dev', {\n        skip: () => app.get('env') === 'test',\n    })\n)\napp.use(bodyParser.json({ limit: '11mb' }))\napp.use(\n    bodyParser.urlencoded({\n        extended: false,\n        limit: '10mb',\n    })\n)\napp.use('/api/v1', v1API)\n\napp.use('/api/v1/*', (req, res, next) => {\n    const err = new Error('올바르지 않은 API 접근입니다.')\n    err.status = 404\n    next(err)\n})\n\napp.use(history({}))\napp.use(express.static(path.join(__dirname, '../public')))\n\n// Catch 404 and forward to error handler\napp.use((req, res, next) => {\n    const err = new Error('Not Found')\n    err.status = 404\n    next(err)\n})\n\n// Error handler\napp.use((err, req, res, next) => {\n    // eslint-disable-line no-unused-vars\n    res.status(err.status || 500).json({\n        message: err.message,\n    })\n})\n\nexport default app\n"]}